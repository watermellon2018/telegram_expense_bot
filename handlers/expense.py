"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
"""

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import CallbackContext, CommandHandler, Filters, MessageHandler, ConversationHandler
from utils import excel, helpers
import config

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
ENTERING_AMOUNT, CHOOSING_CATEGORY, ENTERING_DESCRIPTION = range(3)


def text_handler(update: Update, context: CallbackContext) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø—ã—Ç–∞—è—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞
    """
    user_id = update.effective_user.id
    message_text = update.message.text

    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ –∫–æ–º–∞–Ω–¥—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞
    expense_data = helpers.parse_add_command(message_text)

    if expense_data:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if expense_data['category'] not in config.DEFAULT_CATEGORIES:
            return  # –ù–µ –æ—Ç–≤–µ—á–∞–µ–º, –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ–±—ã—á–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥
        excel.add_expense(
            user_id,
            expense_data['amount'],
            expense_data['category'],
            expense_data['description']
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        category_emoji = config.DEFAULT_CATEGORIES[expense_data['category']]

        confirmation = (
            f"‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:\n"
            f"üí∞ –°—É–º–º–∞: {expense_data['amount']}\n"
            f"{category_emoji} –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {expense_data['category'].title()}"
        )

        if expense_data['description']:
            confirmation += f"\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {expense_data['description'].title()}"

        update.message.reply_text(confirmation)

def add_command(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /add –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞
    """
    user_id = update.effective_user.id
    message_text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if len(message_text.split()) > 1:
        # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Ä–∞–Ω—å—à–µ
        expense_data = helpers.parse_add_command(message_text)

        if not expense_data:
            update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                "/add <—Å—É–º–º–∞> <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> [–æ–ø–∏—Å–∞–Ω–∏–µ]\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: /add 100 –ø—Ä–æ–¥—É–∫—Ç—ã —Ö–ª–µ–± –∏ –º–æ–ª–æ–∫–æ"
            )
            return ConversationHandler.END

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if expense_data['category'] not in config.DEFAULT_CATEGORIES:
            categories_list = ", ".join(config.DEFAULT_CATEGORIES.keys())
            update.message.reply_text(
                f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{expense_data['category']}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories_list}"
            )
            return ConversationHandler.END

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥
        excel.add_expense(
            user_id,
            expense_data['amount'],
            expense_data['category'],
            expense_data['description']
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        category_emoji = config.DEFAULT_CATEGORIES[expense_data['category']]

        confirmation = (
            f"‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:\n"
            f"üí∞ –°—É–º–º–∞: {expense_data['amount']}\n"
            f"{category_emoji} –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {expense_data['category']}"
        )

        if expense_data['description']:
            confirmation += f"\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {expense_data['description']}"

        update.message.reply_text(confirmation)
        return ConversationHandler.END

    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞:"
    )

    return ENTERING_AMOUNT


def handle_amount(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Å—É–º–º—ã —Ä–∞—Å—Ö–æ–¥–∞
    """
    user_id = update.effective_user.id
    text = update.message.text

    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å—É–º–º—É
        amount = float(text)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        context.user_data['amount'] = amount

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        keyboard = []
        row = []
        for i, category in enumerate(config.DEFAULT_CATEGORIES.keys()):
            emoji = config.DEFAULT_CATEGORIES[category]
            row.append(f"{emoji} {category}")
            # –ü–æ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ä—è–¥
            if (i + 1) % 2 == 0 or i == len(config.DEFAULT_CATEGORIES) - 1:
                keyboard.append(row)
                row = []

        keyboard.append(['–û—Ç–º–µ–Ω–∞'])
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

        update.message.reply_text(
            f"–°—É–º–º–∞: {amount:.2f}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–∞:",
            reply_markup=reply_markup
        )

        return CHOOSING_CATEGORY

    except ValueError:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Å—É–º–º—É, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Å–Ω–æ–≤–∞
        update.message.reply_text(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 100.50"
        )
        return ENTERING_AMOUNT


def handle_category(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–∞
    """
    user_id = update.effective_user.id
    text = update.message.text

    if text == '–û—Ç–º–µ–Ω–∞':
        update.message.reply_text(
            "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Ç–µ–∫—Å—Ç–∞ (—É–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏)
    category = text.split()[-1].lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if category not in config.DEFAULT_CATEGORIES:
        categories_list = ", ".join(config.DEFAULT_CATEGORIES.keys())
        update.message.reply_text(
            f"‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {categories_list}"
        )
        return CHOOSING_CATEGORY

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data['category'] = category

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /skip, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å):",
        reply_markup=ReplyKeyboardRemove()
    )

    return ENTERING_DESCRIPTION


def handle_description(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞
    """
    user_id = update.effective_user.id
    text = update.message.text

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    amount = context.user_data.get('amount', 0)
    category = context.user_data.get('category', '')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
    if text == '/skip':
        description = ""
    else:
        description = text

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ö–æ–¥
    excel.add_expense(user_id, amount, category, description)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    category_emoji = config.DEFAULT_CATEGORIES[category]

    confirmation = (
        f"‚úÖ –†–∞—Å—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω:\n"
        f"üí∞ –°—É–º–º–∞: {amount:.2f}\n"
        f"{category_emoji} –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}"
    )

    if description:
        confirmation += f"\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}"

    update.message.reply_text(confirmation)

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()

    return ConversationHandler.END


def cancel(update: Update, context: CallbackContext) -> int:
    """
    –û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞
    """
    update.message.reply_text(
        "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=ReplyKeyboardRemove()
    )

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data.clear()

    return ConversationHandler.END


def direct_amount_handler(update: Update, context: CallbackContext) -> int:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä—è–º–æ–π –≤–≤–æ–¥ —Å—É–º–º—ã –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã
    """
    user_id = update.effective_user.id
    text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—Ö–æ–∂–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—É–º–º—É
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ —á–∏—Å–ª–æ
        amount = float(text)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        context.user_data['amount'] = amount

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        keyboard = []
        row = []
        for i, category in enumerate(config.DEFAULT_CATEGORIES.keys()):
            emoji = config.DEFAULT_CATEGORIES[category]
            row.append(f"{emoji} {category}")
            # –ü–æ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ä—è–¥
            if (i + 1) % 2 == 0 or i == len(config.DEFAULT_CATEGORIES) - 1:
                keyboard.append(row)
                row = []

        keyboard.append(['–û—Ç–º–µ–Ω–∞'])
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

        update.message.reply_text(
            f"–°—É–º–º–∞: {amount:.2f}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–∞:",
            reply_markup=reply_markup
        )

        return CHOOSING_CATEGORY

    except ValueError:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ —á–∏—Å–ª–æ, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –Ω–µ —Å—É–º–º–∞
        return ConversationHandler.END


def register_expense_handlers(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
    """
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º ConversationHandler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /add
    add_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("add", add_command),
            MessageHandler(Filters.regex(r'^\d+(\.\d+)?$') & ~Filters.command, direct_amount_handler)
        ],
        states={
            ENTERING_AMOUNT: [MessageHandler(Filters.text & ~Filters.command, handle_amount)],
            CHOOSING_CATEGORY: [MessageHandler(Filters.text & ~Filters.command, handle_category)],
            ENTERING_DESCRIPTION: [
                CommandHandler("skip", handle_description),
                MessageHandler(Filters.text & ~Filters.command, handle_description)
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
        # –í–∞–∂–Ω–æ: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º name, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å –¥—Ä—É–≥–∏–º–∏ ConversationHandler
        name="add_expense_conversation",
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º persistent=False, —á—Ç–æ–±—ã —Ä–∞–∑–≥–æ–≤–æ—Ä –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–ª—Å—è –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏
        persistent=False
    )
    dp.add_handler(add_conv_handler)
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, text_handler))
